<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ly.jp.application.mapper.auto.UsermstMapper">
  <resultMap id="BaseResultMap" type="ly.jp.application.model.entity.Usermst">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    <id column="userID" jdbcType="VARCHAR" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="addDateTime" jdbcType="TIMESTAMP" property="adddatetime" />
    <result column="addUser" jdbcType="VARCHAR" property="adduser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateuser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    "userID", "userName", "password", "addDateTime", "addUser", "updateTime", "updateUser"
  </sql>
  <select id="selectByExample" parameterType="ly.jp.application.model.entity.UsermstExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from "public"."UserMst"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    select 
    <include refid="Base_Column_List" />
    from "public"."UserMst"
    where "userID" = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    delete from "public"."UserMst"
    where "userID" = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="ly.jp.application.model.entity.UsermstExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    delete from "public"."UserMst"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ly.jp.application.model.entity.Usermst">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    insert into "public"."UserMst" ("userID", "userName", "password", 
      "addDateTime", "addUser", "updateTime", 
      "updateUser")
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{adddatetime,jdbcType=TIMESTAMP}, #{adduser,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updateuser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="ly.jp.application.model.entity.Usermst">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    insert into "public"."UserMst"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        "userID",
      </if>
      <if test="username != null">
        "userName",
      </if>
      <if test="password != null">
        "password",
      </if>
      <if test="adddatetime != null">
        "addDateTime",
      </if>
      <if test="adduser != null">
        "addUser",
      </if>
      <if test="updatetime != null">
        "updateTime",
      </if>
      <if test="updateuser != null">
        "updateUser",
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="adddatetime != null">
        #{adddatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="adduser != null">
        #{adduser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ly.jp.application.model.entity.UsermstExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    select count(*) from "public"."UserMst"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    update "public"."UserMst"
    <set>
      <if test="record.userid != null">
        "userID" = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        "userName" = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        "password" = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.adddatetime != null">
        "addDateTime" = #{record.adddatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adduser != null">
        "addUser" = #{record.adduser,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null">
        "updateTime" = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null">
        "updateUser" = #{record.updateuser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    update "public"."UserMst"
    set "userID" = #{record.userid,jdbcType=VARCHAR},
      "userName" = #{record.username,jdbcType=VARCHAR},
      "password" = #{record.password,jdbcType=VARCHAR},
      "addDateTime" = #{record.adddatetime,jdbcType=TIMESTAMP},
      "addUser" = #{record.adduser,jdbcType=VARCHAR},
      "updateTime" = #{record.updatetime,jdbcType=TIMESTAMP},
      "updateUser" = #{record.updateuser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ly.jp.application.model.entity.Usermst">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    update "public"."UserMst"
    <set>
      <if test="username != null">
        "userName" = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        "password" = #{password,jdbcType=VARCHAR},
      </if>
      <if test="adddatetime != null">
        "addDateTime" = #{adddatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="adduser != null">
        "addUser" = #{adduser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        "updateTime" = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        "updateUser" = #{updateuser,jdbcType=VARCHAR},
      </if>
    </set>
    where "userID" = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ly.jp.application.model.entity.Usermst">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun May 09 19:28:04 JST 2021.
    -->
    update "public"."UserMst"
    set "userName" = #{username,jdbcType=VARCHAR},
      "password" = #{password,jdbcType=VARCHAR},
      "addDateTime" = #{adddatetime,jdbcType=TIMESTAMP},
      "addUser" = #{adduser,jdbcType=VARCHAR},
      "updateTime" = #{updatetime,jdbcType=TIMESTAMP},
      "updateUser" = #{updateuser,jdbcType=VARCHAR}
    where "userID" = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>